<?php
/**
 * Created by PhpStorm.
 * User: root
 * Date: 19.10.17
 * Time: 19:44
 */

function ISA_menu(){
    $items = array();

    $items['team_managers/add'] = array(
        'title' => 'Add team manager',
        'page callback' => '_add_manager',
        'access callback' => TRUE,
        'expanded' => TRUE,
    );

    $items['team_managers/edit/%'] = array(
        'title' => 'Edit team manager',
        'page callback' => '_edit_manager',
        'access callback' => TRUE,
        'expanded' => TRUE,
    );

    $items['team_managers/delete/%'] = array(
        'title'           => t('remove_manager'),
        'page callback'   => 'delete_manager',
        'access callback' => TRUE,
        'type'            => MENU_CALLBACK,
    );

    $items['participants/add'] = array(
        'title' => 'Add participant',
        'page callback' => '_add_participant',
        'access callback' => TRUE,
        'expanded' => TRUE,
    );

    $items['participants/edit/%'] = array(
        'title' => 'Edit participant',
        'page callback' => '_edit_participant',
        'access callback' => TRUE,
        'expanded' => TRUE,
    );

    $items['participants/delete/%'] = array(
        'title'           => t('remove_participant'),
        'page callback'   => 'delete_participant',
        'access callback' => TRUE,
        'type'            => MENU_CALLBACK,
    );

    $items['participants/check'] = array(
        'title'           => t('check_participant'),
        'page callback'   => 'check_participant_ajax',
        'access callback' => TRUE,
        'type'            => MENU_CALLBACK,
    );

    return $items;
}

$GLOBALS['regions'] = array('East Anglia', 'London North', 'London South', 'London West', 'Midlands', 'North', 'South West');

function delete_manager() {
    $nid = $nid = arg(2);
    node_delete($nid);
    drupal_goto("team_managers");
}

function delete_participant() {
    $nid = $nid = arg(2);
    node_delete($nid);
    drupal_goto("participants");
}

function check_participant_ajax(){
    $output = _show_errors();
    drupal_json_output($output);
}

function _add_manager($content = NULL) {
    module_load_include('inc', 'node', 'node.pages');
    $type = 'team_manager';
    $node = (object)array(
        'uid' => $GLOBALS['user']->uid,
        'name' => isset($GLOBALS['user']->name) ? $GLOBALS['user']->name : '',
        'type' => $type,
        'language' => LANGUAGE_NONE
    );
    $form = drupal_get_form($type . '_node_form', $node);
    global $user;
    $account = user_load($user->uid);
    if (in_array('regional admin', $account->roles)) {
        $regionId = $account->field_region['und'][0]['value'];
        $regionTid = get_tid_by_name($GLOBALS['regions'][$regionId]);
        $regionName = taxonomy_term_load($regionTid)->name;
        $form['field_area']['und']['#options'] = [$regionTid => $regionName];
    }
    $form['path']['#access'] =
    $form['menu']['#access'] =
    $form['author']['#access'] =
    $form['comment_settings']['#access'] =
    $form['revision_information']['#access'] = false;
    $delete_keys = array('promote', 'sticky');
    foreach ($form['options'] as $key => $value) {
        if (in_array($key, $delete_keys)) {
            unset($form['options'][$key]);
        }
    }
    unset($form['actions']['preview']);
    $form['actions']['cancel'] = array(
        '#type'   => 'markup',
        '#weight'   => 20,
        '#markup' => '<input type="button" value="Cancel" id="cancel" onclick="goBack()">'
    );
    $output = render($form);

    return $output;
}
function get_tid_by_name($name) {
    $term = taxonomy_get_term_by_name($name);
    $tid = array_shift($term)->tid;
    return $tid;
}

function get_name_by_tid($tid) {
    $term = taxonomy_term_load($tid);
    $name = $term->name;
    return $name;
}

function _edit_manager() {
    $nid = arg(2);
    module_load_include('inc', 'node', 'node.pages');
    $node = node_load($nid);
    $form = drupal_get_form($node->type . '_node_form', $node);
    global $user;
    $account = user_load($user->uid);
    if (in_array('regional admin', $account->roles)) {
        $regionId = $account->field_region['und'][0]['value'];
        $regionTid = get_tid_by_name($GLOBALS['regions'][$regionId]);
        $regionName = taxonomy_term_load($regionTid)->name;
        $form['field_area']['und']['#options'] = [$regionTid => $regionName];
    }
    $form['path']['#access'] =
    $form['menu']['#access'] =
    $form['author']['#access'] =
    $form['comment_settings']['#access'] =
    $form['revision_information']['#access'] = false;
    $delete_keys = array('promote', 'sticky');
    foreach ($form['options'] as $key => $value) {
        if (in_array($key, $delete_keys)) {
            unset($form['options'][$key]);
        }
    }
    $form['actions']['cancel'] = array(
        '#type'   => 'markup',
        '#weight'   => 20,
        '#markup' => '<input type="button" value="Cancel" id="cancel" onclick="goBack()">'
    );
    unset($form['actions']['preview']);
    $output = render($form);

    return $output;
}

function _add_participant($content = NULL) {
    module_load_include('inc', 'node', 'node.pages');
    $type = 'participant';
    $node = (object)array(
        'uid' => $GLOBALS['user']->uid,
        'name' => isset($GLOBALS['user']->name) ? $GLOBALS['user']->name : '',
        'type' => $type,
        'language' => LANGUAGE_NONE
    );
    $form = drupal_get_form($type . '_node_form', $node);

    $form['path']['#access'] =
    $form['menu']['#access'] =
    $form['author']['#access'] =
    $form['comment_settings']['#access'] =
    $form['revision_information']['#access'] = false;
    $delete_keys = array('promote', 'sticky');
    foreach ($form['options'] as $key => $value) {
        if (in_array($key, $delete_keys)) {
            unset($form['options'][$key]);
        }
    }
    $form['actions']['cancel'] = array(
        '#type'   => 'markup',
        '#weight'   => 20,
        '#markup' => '<input type="button" value="Cancel" id="cancel" onclick="goBack()">'
    );
    unset($form['actions']['preview']);
    $output = render($form);

    return $output;
}

function _edit_participant($content = NULL) {
    $nid = arg(2);
    module_load_include('inc', 'node', 'node.pages');
    $node = node_load($nid);
    $form = drupal_get_form($node->type . '_node_form', $node);
    global $user;
    $account = user_load($user->uid);
    if (in_array('regional admin', $account->roles)) {
        $regionId = $account->field_region['und'][0]['value'];
        $regionTid = get_tid_by_name($GLOBALS['regions'][$regionId]);
        $regionName = taxonomy_term_load($regionTid)->name;
        $form['field_area_participant']['und']['#options'] = [$regionTid => $regionName];
    }
    $form['path']['#access'] =
    $form['menu']['#access'] =
    $form['author']['#access'] =
    $form['comment_settings']['#access'] =
    $form['revision_information']['#access'] = false;
    $delete_keys = array('promote', 'sticky');
    foreach ($form['options'] as $key => $value) {
        if (in_array($key, $delete_keys)) {
            unset($form['options'][$key]);
        }
    }
    $form['actions']['cancel'] = array(
        '#type'   => 'markup',
        '#weight'   => 20,
        '#markup' => '<input type="button" value="Cancel" id="cancel" onclick="goBack()">'
    );
    unset($form['actions']['preview']);
    $output = render($form);

    return $output;
}

function ISA_init() {
    if ($_GET['q'] == 'system/ajax' && preg_match('/^[a-z_]+_node_form/', $_POST['form_id'])) {
        module_load_include('inc', 'node', 'node.pages');
    }

    if (current_path() == 'user' && user_is_logged_in()) {
        drupal_goto('team_managers');
    }
}

function ISA_form_participant_node_form_alter(&$form, &$form_state, $form_id) {
    $form['#prefix'] = '<div id="school_select">';
    $form['#suffix'] = '</div>';
    global $user;
    $account = user_load($user->uid);
    if (isset($form['#node']->field_school['und'][0]['tid'])) {
        $tid_school = $form['#node']->field_school['und'][0]['tid'];
        $school_array = [$tid_school => get_name_by_tid($tid_school)];
    } else {
        $school_array = array();
    }
    if (in_array('regional admin', $account->roles)) {
        $regionId = $account->field_region['und'][0]['value'];
        $regionTid = get_tid_by_name($GLOBALS['regions'][$regionId]);
        $regionName = taxonomy_term_load($regionTid)->name;
        $form['field_area_participant']['und']['#options'] = [$regionTid => $regionName];
        $school_array = array();
        $vid = taxonomy_vocabulary_machine_name_load('schools')->vid;
        $terms = taxonomy_get_tree($vid);
        foreach ($terms as $term) {
            $school_area_tid = taxonomy_term_load($term->tid)->field_area_school['und'][0]['tid'];
            if ($school_area_tid == $regionTid) {
                $school_array[$term->tid] = $term->name;
            }
        }
        $form['field_school']['und']['#options'] = $school_array;
    } else {
        $form['field_school']['und']['#options'] = $school_array;

        $form['field_area_participant']['und']['#ajax'] = array(
            'callback' => 'ISA_form_participant_node_form_alter_callback',
            'wrapper' => 'school_select'
        );

        if (isset($form_state['values']['field_area_participant'])) {
            $school_array = array();
            $area_tid = $form_state['values']['field_area_participant']['und'][0]['tid'];
            $vid = taxonomy_vocabulary_machine_name_load('schools')->vid;
            $terms = taxonomy_get_tree($vid);
            foreach ($terms as $term) {
                $school_area_tid = taxonomy_term_load($term->tid)->field_area_school['und'][0]['tid'];
                if ($school_area_tid == $area_tid) {
                    $school_array[$term->tid] = $term->name;
                }
            }
        }

        $form['field_school']['und']['#options'] = $school_array;
    }
    $form['field_dob']['und'][0]['#ajax'] = array(
        'callback' => 'ISA_form_participant_node_form_alter_callback',
        'wrapper' => 'school_select'
    );
    if (isset($form_state['values']['field_dob']['und'][0]['value'])) {
        $form['field_year_group']['und']['#options'] = array();
        $dob = $form_state['values']['field_dob']['und'][0]['value'];
        $vid = taxonomy_vocabulary_machine_name_load('year_group')->vid;
        $terms = taxonomy_get_tree($vid);
        foreach ($terms as $term) {
            $date_to = taxonomy_term_load($term->tid)->field_to_date['und'][0]['value'];
            $date_from = taxonomy_term_load($term->tid)->field_from_date['und'][0]['value'];
            if ($dob >= $date_from AND $dob <= $date_to) {
                $form['field_year_group']['und']['#options'] = [$term->tid => $term->name];
            }
        }
    }
    array_push($form['field_year_group']['#attributes']['class'], 'invisible-field');
    $form['actions']['submit']['#submit'][] = 'ISA_form_participant_node_form_submit';
}

function ISA_form_participant_node_form_submit($form, &$form_state) {
    $form_state['redirect'] = 'participants';
}

function ISA_form_participant_node_form_alter_callback($form, $form_state){
    $form['path']['#access'] =
    $form['menu']['#access'] =
    $form['author']['#access'] =
    $form['comment_settings']['#access'] =
    $form['revision_information']['#access'] = false;
    $delete_keys = array('promote', 'sticky');
    foreach ($form['options'] as $key => $value) {
        if (in_array($key, $delete_keys)) {
            unset($form['options'][$key]);
        }
    }
    unset($form['actions']['preview']);
    return $form;
}
function ISA_form_team_manager_node_form_alter(&$form, &$form_state, $form_id) {
    $form['actions']['submit']['#submit'][] = 'ISA_form_team_manager_node_form_submit';
}

function ISA_form_team_manager_node_form_submit($form, &$form_state) {
    $form_state['redirect'] = 'team_managers';
}
/**
 * @param $view
 */
function ISA_views_pre_render(&$view) {
    if ('team_managers' == $view->name) {
        global $user;
        $account = user_load($user->uid);
        if (in_array('regional admin', $account->roles)) {
            $regionId = $account->field_region['und'][0]['value'];
            $regionTid = get_tid_by_name($GLOBALS['regions'][$regionId]);
            $output = array();
            foreach($view->result as $item) {
                $field_area = field_get_items('node', node_load($item->nid), 'field_area');
                if($field_area[0]['tid'] == $regionTid) {
                    $output[] = $item;
                }
            }
            $view->result = $output;

        }
        $view->result =  ISA_pager_array_splice($view->result, 10);
    }

    if ('participants' == $view->name) {
        global $user;
        $account = user_load($user->uid);
        if (in_array('regional admin', $account->roles)) {
            $regionId = $account->field_region['und'][0]['value'];
            $regionTid = get_tid_by_name($GLOBALS['regions'][$regionId]);
            $output = array();
            foreach($view->result as $item) {
                $field_area = field_get_items('node', node_load($item->nid), 'field_area_participant');
                if($field_area[0]['tid'] == $regionTid) {
                    $output[] = $item;
                }
            }
            $view->result = $output;

        }
        $view->result =  ISA_pager_array_splice($view->result, 10);
    }
}

/**
 * Custom
 * @param $data
 * @param int $limit
 * @param int $element
 * @return array
 */
function ISA_pager_array_splice($data, $limit = 9, $element = 0) {
    global $pager_page_array, $pager_total, $pager_total_items;
    $page = isset($_GET['page']) ? $_GET['page'] : '';
    $pager_page_array = explode(',', $page);
    $pager_total_items[$element] = count($data);
    $pager_total[$element] = ceil($pager_total_items[$element] / $limit);
    $pager_page_array[$element] = max(0, min((int)$pager_page_array[$element], ((int)$pager_total[$element]) - 1));
    return array_slice($data, $pager_page_array[$element] * $limit, $limit, TRUE);
}

/**
 * Implements hook_block_info().
 */
function ISA_block_info() {
    $blocks = array();
    $blocks['participants'] = array(
        'info' => t('Check participants'),
    );
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ISA_block_view($delta = '') {
    $block = array();

    if ($delta == 'participants') {
        $block['content'] = '<div class="error-list"></div>';
    }

    return $block;
}

function _show_errors(){
    $log = '';
    $errors = _check_participants();
    if (count($errors) == 0) {
        $log = '<div class="error_log">Everything is fine!</div>';
    } else {
        foreach ($errors as $error) {
            $log = $log . '<div class="error_log">'.$error.'</div>';
        }
    }
    return $log;
}
function _check_participants() {
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->propertyCondition('status', 1);
    $query->propertyCondition('type', 'participant');
    $result = $query->execute();
    $nodes = node_load_multiple(array_keys($result['node']));
    $nodes2 = $nodes;
    $res = array();
    $helper_sport = array();
    global $user;
    $account = user_load($user->uid);
    $regionTid = -1;
    if (in_array('regional admin', $account->roles)) {
        $regionId = $account->field_region['und'][0]['value'];
        $regionTid = get_tid_by_name($GLOBALS['regions'][$regionId]);
    }
    foreach ($nodes as $key => $part){
        foreach ($nodes2 as $key2 => $part2){
            if ($key < $key2){
                $fname = $part->title;
                $lname =$part-> field_last_name['und'][0]['value'];
                $school_tid = $part->field_school['und'][0]['tid'];
                $dob = $part->field_dob['und'][0]['value'];
                $area = $part->field_area_participant['und'][0]['tid'];
                if ($area != $regionTid && $regionTid != -1){
                    break;
                }
                if ($fname == $part2->title &&
                    $lname == $part2->field_last_name['und'][0]['value'] &&
                    $school_tid == $part2->field_school['und'][0]['tid'] &&
                    $dob != $part2->field_dob['und'][0]['value']
                ) {
                    $lname = $part2->field_last_name['und'][0]['value'];
                    $school = taxonomy_term_load($part2->field_school['und'][0]['tid'])->name;
                    $dob1 =  date('d/m/Y', strtotime($part->field_dob['und'][0]['value']));
                    $dob2 =  date('d/m/Y', strtotime($part2->field_dob['und'][0]['value']));
                    array_push($res, "Same name and school, but different DOB. $part2->title $lname  $school. $dob1 and $dob2");
                }
                if ($fname == $part2->title &&
                    $lname == $part2->field_last_name['und'][0]['value'] &&
                    $school_tid == $part2->field_school['und'][0]['tid'] &&
                    $dob == $part2->field_dob['und'][0]['value']
                ) {
                    $sport = taxonomy_term_load($part->field_competition['und'][0]['tid'])->name;
                    $is_individ = _is_individual_sport($sport);
                    $is_relay = _is_relay($sport);
                    $index = _check_stud($helper_sport, $fname, $lname, $school_tid, $dob);
                    if ($index != -1) {
                        if (!in_array($key, $helper_sport[$index]['keys']) && !in_array($key2, $helper_sport[$index]['keys'])) {
                            if ($is_individ) {
                                $helper_sport[$index]['individ_count'] += 1;
                            }
                            if ($is_relay) {
                                $helper_sport[$index]['relay_count'] += 1;
                            }
                            array_push($helper_sport[$index]['keys'], $key2);
                        }
                    } else {
                        $ind = $is_individ ? 1 : 0;
                        $rel = $is_relay ? 1 : 0;
                        $sport2= taxonomy_term_load($part2->field_competition['und'][0]['tid'])->name;
                        $is_individ2 = _is_individual_sport($sport2);
                        $is_relay2 = _is_relay($sport2);
                        $ind = $is_individ2 ? $ind+1 : $ind;
                        $rel = $is_relay2 ? $rel+1 : $rel;
                        array_push($helper_sport, array('fname' => $fname, 'lname' =>$lname, 's_tid' => $school_tid, 'dob' => $dob,
                            'individ_count' => $ind, 'relay_count' => $rel, 'keys' => array($key2)));
                    }
                }
            }
        }
    }
    foreach ($helper_sport as $stud) {
        $school = taxonomy_term_load($stud['s_tid'])->name;
        if ($stud['individ_count'] > 2) {
            array_push($res, "More than two individual sports. $stud[fname] $stud[lname] $school. Individuals: $stud[individ_count].");
        }
        if ($stud['relay_count'] > 2) {
            array_push($res, "More than two relay sports. $stud[fname] $stud[lname] $school. Relays: $stud[relay_count].");
        }
    }
   return $res;
}

function _check_stud($arr, $fname, $lname, $school_tid, $dob) {
    foreach ($arr as $key => $stud) {
        if (
            $stud['fname']  == $fname &&
            $stud['lname']  == $lname &&
            $stud['s_tid']  == $school_tid &&
            $stud['dob']    == $dob
        ) {
            return $key;
        }
    }
    return -1;
}

function _is_individual_sport($sport) {
    $individual_sports = array('Breaststroke', 'Backstroke', 'Freestyle');
    return in_array($sport, $individual_sports);
}

function _is_relay($sport) {
    $relays = array('Breaststroke Relay', 'Backstroke Relay', 'Freestyle Relay');
    return in_array($sport, $relays);
}

function ISA_views_pre_build(&$view) {
    if ('team_managers' == $view->name) {
        global $user;
        $account = user_load($user->uid);
        if (in_array('regional admin', $account->roles)) {
            $regionId = $account->field_region['und'][0]['value'];
            $regionTid = get_tid_by_name($GLOBALS['regions'][$regionId]);

            $display = $view->current_display;
            $filter_field = 'field_area_tid';
            $new_value = $regionTid;

            if (isset($view->display[$display]->handler->handlers['filter'][$filter_field])) {
                $view->display[$display]->handler->handlers['filter'][$filter_field]->value = array(
                    $new_value => $new_value,
                );
            }
        }
    }
    if ('participants' == $view->name) {
        global $user;
        $account = user_load($user->uid);
        if (in_array('regional admin', $account->roles)) {
            $regionId = $account->field_region['und'][0]['value'];
            $regionTid = get_tid_by_name($GLOBALS['regions'][$regionId]);

            $display = $view->current_display;
            $filter_field = 'field_area_participant_tid';
            $new_value = $regionTid;

            if (isset($view->display[$display]->handler->handlers['filter'][$filter_field])) {
                $view->display[$display]->handler->handlers['filter'][$filter_field]->value = array(
                    $new_value => $new_value,
                );
            }
        }

    }

}

function ISA_node_validate($node, $form) {
    $value = $node->field_dob['und'][0]['value'];
    $max = '2008-08-31T00:00:00';
    $min = '1998-09-01T00:00:00';
    if ($value < $min || $value > $max) {
        form_set_error('field_dob', t('DOB is not valid for this event'));
    }
}



